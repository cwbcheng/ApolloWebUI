@using Blazored
@using Blazored.Modal
@using Blazored.Modal.Services
@using Model

@inject IModalService ModalService

@if (ShowForm)
{
    <div class="simple-form">
        <div class="form-group">
            <label for="value">@Item.Key</label>
            <input @bind="Item.Value" type="text" class="form-control" id="value" />
        </div>

        <button @onclick="SubmitForm" class="btn btn-primary">Submit</button>
        <button @onclick="Cancel" class="btn btn-secondary">Cancel</button>
    </div>
}
else
{
    <div class="alert alert-success" role="alert">
        Thanks @FirstName @LastName, form  submitted successfully.<br />
        <button class="btn btn-primary" @onclick="@Done">Done</button>
    </div>
}

@code {

    [CascadingParameter] ModalParameters Parameters { get; set; }

    bool ShowForm { get; set; } = true;
    string FirstName { get; set; }
    string LastName { get; set; }
    NamespaceItem Item { get; set; }

    protected override void OnInitialized()
    {
        Item = Parameters.Get<NamespaceItem>("Item");
    }

    void SubmitForm()
    {
        ShowForm = false;
    }

    void Done()
    {
        ModalService.Close(ModalResult.Ok($"Form ID  was submitted successfully."));
    }

    void Cancel()
    {
        ModalService.Close(ModalResult.Cancel());
    }

}
