@page "/GSTCSplitor"

@using Blazored.Modal.Services
@using System.Text.Json
@using ApolloWebUI.Model
@using System.Text;
@using Microsoft.Extensions.Configuration;
@using System.Buffers;
@using System.ComponentModel.DataAnnotations;
@using Microsoft.AspNetCore.Http.Features
@using Microsoft.AspNetCore.Http
@inject IModalService  Modal
@inject IConfiguration Configuration

<div>
    <textarea class="form-control" style="width:100%" @bind="@RequestUri"></textarea>
</div>
<ul>
    @foreach (var p in paramters)
    {
        <li>@p</li>
    }
</ul>
<button @onclick="Split">查询</button>
<div>
    <p style="color:red">@Message</p>
</div>
@code {
    string _requestUri;
    string RequestUri
    {
        get
        {
            return _requestUri;
        }
        set
        {
            _requestUri = value;
        }
    }
    string Message { get; set; } = string.Empty;

    List<string> paramters = new List<string>();

    string uriTemple = "https://ttc.chinalife-p.com.cn/MSF/wecheat-html/product/producd170.html?pid={pid}&productId={productId}&salesMenNO={userName}&sysId={sysId}&productNo={productNo}&organizationId={organizationId}&saleChannelId={saleChannelId}&businessNature={businessNature}&agentId={agentId}&agencyAgree={agencyAgree}&disRate={disRate}&handlerCode={userName}&lifeOperatorCode={userName}&makecom={makecom}&approvercode={userName}&sysSourceCode={sysSourceCode}&riskcode={riskcode}&verId={verId}&saleInfoId={saleInfoId}&identificationCode={identificationCode}&extParams={extParams}&history={history}";

    async Task Split()
    {

        try
        {
            if (string.IsNullOrWhiteSpace(RequestUri))
            {
                Message = "链接不能为空";
            }
            else
            {
                paramters.Clear();
                Message = string.Empty;
            }
            var uri = new Uri(RequestUri);
            var qs = uri.Query.Substring(1).Split('&');
            string userName = null;
            foreach (var item in qs)
            {
                paramters.Add($"ej_{item}");
                if (item.StartsWith("salesMenNO"))
                {
                    var a = item.Split('=', 2);
                    userName = a[1];
                }
            }

            StringBuilder sb = new StringBuilder(uriTemple);
            foreach (var item in paramters)
            {
                var a = item.Split('=', 2);
                sb.Replace($"{{{a[0].Substring("ej_".Length)}}}", a[1]);
            }
            sb.Replace($"{{userName}}", userName);
            var newUri = sb.ToString();
            if (newUri != RequestUri)
            {
                Message = $"警告！生成的Uri与原Uri不一致！（{newUri}）";
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
            Message = $"处理结果时出现异常：{ex.Message}";
        }
    }
}
